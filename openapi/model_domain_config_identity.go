/*
Keystone API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DomainConfigIdentity struct for DomainConfigIdentity
type DomainConfigIdentity struct {
	// The Identity backend driver.
	Driver *string `json:"driver,omitempty"`
}

// NewDomainConfigIdentity instantiates a new DomainConfigIdentity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDomainConfigIdentity() *DomainConfigIdentity {
	this := DomainConfigIdentity{}
	return &this
}

// NewDomainConfigIdentityWithDefaults instantiates a new DomainConfigIdentity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDomainConfigIdentityWithDefaults() *DomainConfigIdentity {
	this := DomainConfigIdentity{}
	return &this
}

// GetDriver returns the Driver field value if set, zero value otherwise.
func (o *DomainConfigIdentity) GetDriver() string {
	if o == nil || o.Driver == nil {
		var ret string
		return ret
	}
	return *o.Driver
}

// GetDriverOk returns a tuple with the Driver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainConfigIdentity) GetDriverOk() (*string, bool) {
	if o == nil || o.Driver == nil {
		return nil, false
	}
	return o.Driver, true
}

// HasDriver returns a boolean if a field has been set.
func (o *DomainConfigIdentity) HasDriver() bool {
	if o != nil && o.Driver != nil {
		return true
	}

	return false
}

// SetDriver gets a reference to the given string and assigns it to the Driver field.
func (o *DomainConfigIdentity) SetDriver(v string) {
	o.Driver = &v
}

func (o DomainConfigIdentity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Driver != nil {
		toSerialize["driver"] = o.Driver
	}
	return json.Marshal(toSerialize)
}

type NullableDomainConfigIdentity struct {
	value *DomainConfigIdentity
	isSet bool
}

func (v NullableDomainConfigIdentity) Get() *DomainConfigIdentity {
	return v.value
}

func (v *NullableDomainConfigIdentity) Set(val *DomainConfigIdentity) {
	v.value = val
	v.isSet = true
}

func (v NullableDomainConfigIdentity) IsSet() bool {
	return v.isSet
}

func (v *NullableDomainConfigIdentity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDomainConfigIdentity(val *DomainConfigIdentity) *NullableDomainConfigIdentity {
	return &NullableDomainConfigIdentity{value: val, isSet: true}
}

func (v NullableDomainConfigIdentity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDomainConfigIdentity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
