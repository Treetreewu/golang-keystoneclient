// Copyright 2017 EasyStack, Inc.

/*
Keystone API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AccessRuleRequest struct for AccessRuleRequest
type AccessRuleRequest struct {
	Path    *string `json:"path,omitempty"`
	Method  *string `json:"method,omitempty"`
	Service *string `json:"service,omitempty"`
}

// NewAccessRuleRequest instantiates a new AccessRuleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessRuleRequest() *AccessRuleRequest {
	this := AccessRuleRequest{}
	return &this
}

// NewAccessRuleRequestWithDefaults instantiates a new AccessRuleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessRuleRequestWithDefaults() *AccessRuleRequest {
	this := AccessRuleRequest{}
	return &this
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *AccessRuleRequest) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessRuleRequest) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *AccessRuleRequest) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *AccessRuleRequest) SetPath(v string) {
	o.Path = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *AccessRuleRequest) GetMethod() string {
	if o == nil || o.Method == nil {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessRuleRequest) GetMethodOk() (*string, bool) {
	if o == nil || o.Method == nil {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *AccessRuleRequest) HasMethod() bool {
	if o != nil && o.Method != nil {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *AccessRuleRequest) SetMethod(v string) {
	o.Method = &v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *AccessRuleRequest) GetService() string {
	if o == nil || o.Service == nil {
		var ret string
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessRuleRequest) GetServiceOk() (*string, bool) {
	if o == nil || o.Service == nil {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *AccessRuleRequest) HasService() bool {
	if o != nil && o.Service != nil {
		return true
	}

	return false
}

// SetService gets a reference to the given string and assigns it to the Service field.
func (o *AccessRuleRequest) SetService(v string) {
	o.Service = &v
}

func (o AccessRuleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	if o.Method != nil {
		toSerialize["method"] = o.Method
	}
	if o.Service != nil {
		toSerialize["service"] = o.Service
	}
	return json.Marshal(toSerialize)
}

type NullableAccessRuleRequest struct {
	value *AccessRuleRequest
	isSet bool
}

func (v NullableAccessRuleRequest) Get() *AccessRuleRequest {
	return v.value
}

func (v *NullableAccessRuleRequest) Set(val *AccessRuleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessRuleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessRuleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessRuleRequest(val *AccessRuleRequest) *NullableAccessRuleRequest {
	return &NullableAccessRuleRequest{value: val, isSet: true}
}

func (v NullableAccessRuleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessRuleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
