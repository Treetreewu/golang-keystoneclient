/*
Keystone API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApplicationCredential struct for ApplicationCredential
type ApplicationCredential struct {
	// The ID of the application credential.
	Id *string `json:"id,omitempty"`
	// The name of the application credential.
	Name *string `json:"name,omitempty"`
	// The secret for the application credential, either generated by the server or provided by the user. This is only ever shown once in the response to a create request. It is not stored nor ever shown again. If the secret is lost, a new application credential must be created.
	Secret *string `json:"secret,omitempty"`
	// A description of the application credentialâ€™s purpose.
	Description *string `json:"description,omitempty"`
	// The expiration time of the application credential, if one was specified.
	ExpiresAt *string `json:"expires_at,omitempty"`
	// The ID of the project the application credential was created for and that authentication requests using this application credential will be scoped to.
	ProjectId *string                      `json:"project_id,omitempty"`
	Roles     *[]ApplicationCredentialRole `json:"roles,omitempty"`
	// A list of `access_rules` objects
	AccessRules *[]AccessRule `json:"access_rules,omitempty"`
	// A flag indicating whether the application credential may be used for creation or destruction of other application credentials or trusts.
	Unrestricted *bool     `json:"unrestricted,omitempty"`
	Links        *SelfLink `json:"links,omitempty"`
}

// NewApplicationCredential instantiates a new ApplicationCredential object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationCredential() *ApplicationCredential {
	this := ApplicationCredential{}
	return &this
}

// NewApplicationCredentialWithDefaults instantiates a new ApplicationCredential object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationCredentialWithDefaults() *ApplicationCredential {
	this := ApplicationCredential{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApplicationCredential) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationCredential) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApplicationCredential) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ApplicationCredential) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApplicationCredential) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationCredential) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApplicationCredential) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApplicationCredential) SetName(v string) {
	o.Name = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *ApplicationCredential) GetSecret() string {
	if o == nil || o.Secret == nil {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationCredential) GetSecretOk() (*string, bool) {
	if o == nil || o.Secret == nil {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *ApplicationCredential) HasSecret() bool {
	if o != nil && o.Secret != nil {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *ApplicationCredential) SetSecret(v string) {
	o.Secret = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ApplicationCredential) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationCredential) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ApplicationCredential) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ApplicationCredential) SetDescription(v string) {
	o.Description = &v
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise.
func (o *ApplicationCredential) GetExpiresAt() string {
	if o == nil || o.ExpiresAt == nil {
		var ret string
		return ret
	}
	return *o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationCredential) GetExpiresAtOk() (*string, bool) {
	if o == nil || o.ExpiresAt == nil {
		return nil, false
	}
	return o.ExpiresAt, true
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *ApplicationCredential) HasExpiresAt() bool {
	if o != nil && o.ExpiresAt != nil {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given string and assigns it to the ExpiresAt field.
func (o *ApplicationCredential) SetExpiresAt(v string) {
	o.ExpiresAt = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *ApplicationCredential) GetProjectId() string {
	if o == nil || o.ProjectId == nil {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationCredential) GetProjectIdOk() (*string, bool) {
	if o == nil || o.ProjectId == nil {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *ApplicationCredential) HasProjectId() bool {
	if o != nil && o.ProjectId != nil {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *ApplicationCredential) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *ApplicationCredential) GetRoles() []ApplicationCredentialRole {
	if o == nil || o.Roles == nil {
		var ret []ApplicationCredentialRole
		return ret
	}
	return *o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationCredential) GetRolesOk() (*[]ApplicationCredentialRole, bool) {
	if o == nil || o.Roles == nil {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *ApplicationCredential) HasRoles() bool {
	if o != nil && o.Roles != nil {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []ApplicationCredentialRole and assigns it to the Roles field.
func (o *ApplicationCredential) SetRoles(v []ApplicationCredentialRole) {
	o.Roles = &v
}

// GetAccessRules returns the AccessRules field value if set, zero value otherwise.
func (o *ApplicationCredential) GetAccessRules() []AccessRule {
	if o == nil || o.AccessRules == nil {
		var ret []AccessRule
		return ret
	}
	return *o.AccessRules
}

// GetAccessRulesOk returns a tuple with the AccessRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationCredential) GetAccessRulesOk() (*[]AccessRule, bool) {
	if o == nil || o.AccessRules == nil {
		return nil, false
	}
	return o.AccessRules, true
}

// HasAccessRules returns a boolean if a field has been set.
func (o *ApplicationCredential) HasAccessRules() bool {
	if o != nil && o.AccessRules != nil {
		return true
	}

	return false
}

// SetAccessRules gets a reference to the given []AccessRule and assigns it to the AccessRules field.
func (o *ApplicationCredential) SetAccessRules(v []AccessRule) {
	o.AccessRules = &v
}

// GetUnrestricted returns the Unrestricted field value if set, zero value otherwise.
func (o *ApplicationCredential) GetUnrestricted() bool {
	if o == nil || o.Unrestricted == nil {
		var ret bool
		return ret
	}
	return *o.Unrestricted
}

// GetUnrestrictedOk returns a tuple with the Unrestricted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationCredential) GetUnrestrictedOk() (*bool, bool) {
	if o == nil || o.Unrestricted == nil {
		return nil, false
	}
	return o.Unrestricted, true
}

// HasUnrestricted returns a boolean if a field has been set.
func (o *ApplicationCredential) HasUnrestricted() bool {
	if o != nil && o.Unrestricted != nil {
		return true
	}

	return false
}

// SetUnrestricted gets a reference to the given bool and assigns it to the Unrestricted field.
func (o *ApplicationCredential) SetUnrestricted(v bool) {
	o.Unrestricted = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ApplicationCredential) GetLinks() SelfLink {
	if o == nil || o.Links == nil {
		var ret SelfLink
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationCredential) GetLinksOk() (*SelfLink, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ApplicationCredential) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given SelfLink and assigns it to the Links field.
func (o *ApplicationCredential) SetLinks(v SelfLink) {
	o.Links = &v
}

func (o ApplicationCredential) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Secret != nil {
		toSerialize["secret"] = o.Secret
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.ExpiresAt != nil {
		toSerialize["expires_at"] = o.ExpiresAt
	}
	if o.ProjectId != nil {
		toSerialize["project_id"] = o.ProjectId
	}
	if o.Roles != nil {
		toSerialize["roles"] = o.Roles
	}
	if o.AccessRules != nil {
		toSerialize["access_rules"] = o.AccessRules
	}
	if o.Unrestricted != nil {
		toSerialize["unrestricted"] = o.Unrestricted
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	return json.Marshal(toSerialize)
}

type NullableApplicationCredential struct {
	value *ApplicationCredential
	isSet bool
}

func (v NullableApplicationCredential) Get() *ApplicationCredential {
	return v.value
}

func (v *NullableApplicationCredential) Set(val *ApplicationCredential) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationCredential) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationCredential) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationCredential(val *ApplicationCredential) *NullableApplicationCredential {
	return &NullableApplicationCredential{value: val, isSet: true}
}

func (v NullableApplicationCredential) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationCredential) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
