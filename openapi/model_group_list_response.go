// Copyright 2017 EasyStack, Inc.

/*
Keystone API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GroupListResponse struct for GroupListResponse
type GroupListResponse struct {
	Groups *[]Group `json:"groups,omitempty"`
	Links  *Links   `json:"links,omitempty"`
}

// NewGroupListResponse instantiates a new GroupListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupListResponse() *GroupListResponse {
	this := GroupListResponse{}
	return &this
}

// NewGroupListResponseWithDefaults instantiates a new GroupListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupListResponseWithDefaults() *GroupListResponse {
	this := GroupListResponse{}
	return &this
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *GroupListResponse) GetGroups() []Group {
	if o == nil || o.Groups == nil {
		var ret []Group
		return ret
	}
	return *o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupListResponse) GetGroupsOk() (*[]Group, bool) {
	if o == nil || o.Groups == nil {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *GroupListResponse) HasGroups() bool {
	if o != nil && o.Groups != nil {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []Group and assigns it to the Groups field.
func (o *GroupListResponse) SetGroups(v []Group) {
	o.Groups = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *GroupListResponse) GetLinks() Links {
	if o == nil || o.Links == nil {
		var ret Links
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupListResponse) GetLinksOk() (*Links, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *GroupListResponse) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given Links and assigns it to the Links field.
func (o *GroupListResponse) SetLinks(v Links) {
	o.Links = &v
}

func (o GroupListResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Groups != nil {
		toSerialize["groups"] = o.Groups
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	return json.Marshal(toSerialize)
}

type NullableGroupListResponse struct {
	value *GroupListResponse
	isSet bool
}

func (v NullableGroupListResponse) Get() *GroupListResponse {
	return v.value
}

func (v *NullableGroupListResponse) Set(val *GroupListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupListResponse(val *GroupListResponse) *NullableGroupListResponse {
	return &NullableGroupListResponse{value: val, isSet: true}
}

func (v NullableGroupListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
