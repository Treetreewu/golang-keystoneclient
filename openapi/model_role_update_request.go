// Copyright 2017 EasyStack, Inc.

/*
Keystone API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RoleUpdateRequest struct for RoleUpdateRequest
type RoleUpdateRequest struct {
	Role *RoleUpdate `json:"role,omitempty"`
}

// NewRoleUpdateRequest instantiates a new RoleUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleUpdateRequest() *RoleUpdateRequest {
	this := RoleUpdateRequest{}
	return &this
}

// NewRoleUpdateRequestWithDefaults instantiates a new RoleUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleUpdateRequestWithDefaults() *RoleUpdateRequest {
	this := RoleUpdateRequest{}
	return &this
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *RoleUpdateRequest) GetRole() RoleUpdate {
	if o == nil || o.Role == nil {
		var ret RoleUpdate
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleUpdateRequest) GetRoleOk() (*RoleUpdate, bool) {
	if o == nil || o.Role == nil {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *RoleUpdateRequest) HasRole() bool {
	if o != nil && o.Role != nil {
		return true
	}

	return false
}

// SetRole gets a reference to the given RoleUpdate and assigns it to the Role field.
func (o *RoleUpdateRequest) SetRole(v RoleUpdate) {
	o.Role = &v
}

func (o RoleUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Role != nil {
		toSerialize["role"] = o.Role
	}
	return json.Marshal(toSerialize)
}

type NullableRoleUpdateRequest struct {
	value *RoleUpdateRequest
	isSet bool
}

func (v NullableRoleUpdateRequest) Get() *RoleUpdateRequest {
	return v.value
}

func (v *NullableRoleUpdateRequest) Set(val *RoleUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleUpdateRequest(val *RoleUpdateRequest) *NullableRoleUpdateRequest {
	return &NullableRoleUpdateRequest{value: val, isSet: true}
}

func (v NullableRoleUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
