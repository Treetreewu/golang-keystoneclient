/*
Keystone API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DomainConfig struct for DomainConfig
type DomainConfig struct {
	Config DomainConfigConfig `json:"config"`
}

// NewDomainConfig instantiates a new DomainConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDomainConfig(config DomainConfigConfig) *DomainConfig {
	this := DomainConfig{}
	this.Config = config
	return &this
}

// NewDomainConfigWithDefaults instantiates a new DomainConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDomainConfigWithDefaults() *DomainConfig {
	this := DomainConfig{}
	return &this
}

// GetConfig returns the Config field value
func (o *DomainConfig) GetConfig() DomainConfigConfig {
	if o == nil {
		var ret DomainConfigConfig
		return ret
	}

	return o.Config
}

// GetConfigOk returns a tuple with the Config field value
// and a boolean to check if the value has been set.
func (o *DomainConfig) GetConfigOk() (*DomainConfigConfig, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Config, true
}

// SetConfig sets field value
func (o *DomainConfig) SetConfig(v DomainConfigConfig) {
	o.Config = v
}

func (o DomainConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["config"] = o.Config
	}
	return json.Marshal(toSerialize)
}

type NullableDomainConfig struct {
	value *DomainConfig
	isSet bool
}

func (v NullableDomainConfig) Get() *DomainConfig {
	return v.value
}

func (v *NullableDomainConfig) Set(val *DomainConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableDomainConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableDomainConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDomainConfig(val *DomainConfig) *NullableDomainConfig {
	return &NullableDomainConfig{value: val, isSet: true}
}

func (v NullableDomainConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDomainConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
