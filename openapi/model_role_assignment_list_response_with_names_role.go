/*
Keystone API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RoleAssignmentListResponseWithNamesRole struct for RoleAssignmentListResponseWithNamesRole
type RoleAssignmentListResponseWithNamesRole struct {
	Id     *string    `json:"id,omitempty"`
	Name   *string    `json:"name,omitempty"`
	Domain *IdAndName `json:"domain,omitempty"`
}

// NewRoleAssignmentListResponseWithNamesRole instantiates a new RoleAssignmentListResponseWithNamesRole object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleAssignmentListResponseWithNamesRole() *RoleAssignmentListResponseWithNamesRole {
	this := RoleAssignmentListResponseWithNamesRole{}
	return &this
}

// NewRoleAssignmentListResponseWithNamesRoleWithDefaults instantiates a new RoleAssignmentListResponseWithNamesRole object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleAssignmentListResponseWithNamesRoleWithDefaults() *RoleAssignmentListResponseWithNamesRole {
	this := RoleAssignmentListResponseWithNamesRole{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RoleAssignmentListResponseWithNamesRole) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleAssignmentListResponseWithNamesRole) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RoleAssignmentListResponseWithNamesRole) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *RoleAssignmentListResponseWithNamesRole) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RoleAssignmentListResponseWithNamesRole) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleAssignmentListResponseWithNamesRole) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RoleAssignmentListResponseWithNamesRole) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RoleAssignmentListResponseWithNamesRole) SetName(v string) {
	o.Name = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *RoleAssignmentListResponseWithNamesRole) GetDomain() IdAndName {
	if o == nil || o.Domain == nil {
		var ret IdAndName
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleAssignmentListResponseWithNamesRole) GetDomainOk() (*IdAndName, bool) {
	if o == nil || o.Domain == nil {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *RoleAssignmentListResponseWithNamesRole) HasDomain() bool {
	if o != nil && o.Domain != nil {
		return true
	}

	return false
}

// SetDomain gets a reference to the given IdAndName and assigns it to the Domain field.
func (o *RoleAssignmentListResponseWithNamesRole) SetDomain(v IdAndName) {
	o.Domain = &v
}

func (o RoleAssignmentListResponseWithNamesRole) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Domain != nil {
		toSerialize["domain"] = o.Domain
	}
	return json.Marshal(toSerialize)
}

type NullableRoleAssignmentListResponseWithNamesRole struct {
	value *RoleAssignmentListResponseWithNamesRole
	isSet bool
}

func (v NullableRoleAssignmentListResponseWithNamesRole) Get() *RoleAssignmentListResponseWithNamesRole {
	return v.value
}

func (v *NullableRoleAssignmentListResponseWithNamesRole) Set(val *RoleAssignmentListResponseWithNamesRole) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleAssignmentListResponseWithNamesRole) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleAssignmentListResponseWithNamesRole) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleAssignmentListResponseWithNamesRole(val *RoleAssignmentListResponseWithNamesRole) *NullableRoleAssignmentListResponseWithNamesRole {
	return &NullableRoleAssignmentListResponseWithNamesRole{value: val, isSet: true}
}

func (v NullableRoleAssignmentListResponseWithNamesRole) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleAssignmentListResponseWithNamesRole) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
