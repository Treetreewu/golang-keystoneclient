/*
Keystone API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RoleListResponse struct for RoleListResponse
type RoleListResponse struct {
	Links *Links  `json:"links,omitempty"`
	Roles *[]Role `json:"roles,omitempty"`
}

// NewRoleListResponse instantiates a new RoleListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleListResponse() *RoleListResponse {
	this := RoleListResponse{}
	return &this
}

// NewRoleListResponseWithDefaults instantiates a new RoleListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleListResponseWithDefaults() *RoleListResponse {
	this := RoleListResponse{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *RoleListResponse) GetLinks() Links {
	if o == nil || o.Links == nil {
		var ret Links
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleListResponse) GetLinksOk() (*Links, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *RoleListResponse) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given Links and assigns it to the Links field.
func (o *RoleListResponse) SetLinks(v Links) {
	o.Links = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *RoleListResponse) GetRoles() []Role {
	if o == nil || o.Roles == nil {
		var ret []Role
		return ret
	}
	return *o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleListResponse) GetRolesOk() (*[]Role, bool) {
	if o == nil || o.Roles == nil {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *RoleListResponse) HasRoles() bool {
	if o != nil && o.Roles != nil {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []Role and assigns it to the Roles field.
func (o *RoleListResponse) SetRoles(v []Role) {
	o.Roles = &v
}

func (o RoleListResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if o.Roles != nil {
		toSerialize["roles"] = o.Roles
	}
	return json.Marshal(toSerialize)
}

type NullableRoleListResponse struct {
	value *RoleListResponse
	isSet bool
}

func (v NullableRoleListResponse) Get() *RoleListResponse {
	return v.value
}

func (v *NullableRoleListResponse) Set(val *RoleListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleListResponse(val *RoleListResponse) *NullableRoleListResponse {
	return &NullableRoleListResponse{value: val, isSet: true}
}

func (v NullableRoleListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
