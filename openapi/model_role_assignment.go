// Copyright 2017 EasyStack, Inc.

/*
Keystone API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RoleAssignment struct for RoleAssignment
type RoleAssignment struct {
	Links *RoleAssignmentLinks            `json:"links,omitempty"`
	Role  *RoleAssignmentListResponseRole `json:"role,omitempty"`
	User  *RoleAssignmentListResponseRole `json:"user,omitempty"`
	Scope *RoleAssignmentScope            `json:"scope,omitempty"`
}

// NewRoleAssignment instantiates a new RoleAssignment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleAssignment() *RoleAssignment {
	this := RoleAssignment{}
	return &this
}

// NewRoleAssignmentWithDefaults instantiates a new RoleAssignment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleAssignmentWithDefaults() *RoleAssignment {
	this := RoleAssignment{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *RoleAssignment) GetLinks() RoleAssignmentLinks {
	if o == nil || o.Links == nil {
		var ret RoleAssignmentLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleAssignment) GetLinksOk() (*RoleAssignmentLinks, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *RoleAssignment) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given RoleAssignmentLinks and assigns it to the Links field.
func (o *RoleAssignment) SetLinks(v RoleAssignmentLinks) {
	o.Links = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *RoleAssignment) GetRole() RoleAssignmentListResponseRole {
	if o == nil || o.Role == nil {
		var ret RoleAssignmentListResponseRole
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleAssignment) GetRoleOk() (*RoleAssignmentListResponseRole, bool) {
	if o == nil || o.Role == nil {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *RoleAssignment) HasRole() bool {
	if o != nil && o.Role != nil {
		return true
	}

	return false
}

// SetRole gets a reference to the given RoleAssignmentListResponseRole and assigns it to the Role field.
func (o *RoleAssignment) SetRole(v RoleAssignmentListResponseRole) {
	o.Role = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *RoleAssignment) GetUser() RoleAssignmentListResponseRole {
	if o == nil || o.User == nil {
		var ret RoleAssignmentListResponseRole
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleAssignment) GetUserOk() (*RoleAssignmentListResponseRole, bool) {
	if o == nil || o.User == nil {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *RoleAssignment) HasUser() bool {
	if o != nil && o.User != nil {
		return true
	}

	return false
}

// SetUser gets a reference to the given RoleAssignmentListResponseRole and assigns it to the User field.
func (o *RoleAssignment) SetUser(v RoleAssignmentListResponseRole) {
	o.User = &v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *RoleAssignment) GetScope() RoleAssignmentScope {
	if o == nil || o.Scope == nil {
		var ret RoleAssignmentScope
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleAssignment) GetScopeOk() (*RoleAssignmentScope, bool) {
	if o == nil || o.Scope == nil {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *RoleAssignment) HasScope() bool {
	if o != nil && o.Scope != nil {
		return true
	}

	return false
}

// SetScope gets a reference to the given RoleAssignmentScope and assigns it to the Scope field.
func (o *RoleAssignment) SetScope(v RoleAssignmentScope) {
	o.Scope = &v
}

func (o RoleAssignment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if o.Role != nil {
		toSerialize["role"] = o.Role
	}
	if o.User != nil {
		toSerialize["user"] = o.User
	}
	if o.Scope != nil {
		toSerialize["scope"] = o.Scope
	}
	return json.Marshal(toSerialize)
}

type NullableRoleAssignment struct {
	value *RoleAssignment
	isSet bool
}

func (v NullableRoleAssignment) Get() *RoleAssignment {
	return v.value
}

func (v *NullableRoleAssignment) Set(val *RoleAssignment) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleAssignment) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleAssignment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleAssignment(val *RoleAssignment) *NullableRoleAssignment {
	return &NullableRoleAssignment{value: val, isSet: true}
}

func (v NullableRoleAssignment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleAssignment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
