/*
Keystone API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ServiceProviderResponse struct for ServiceProviderResponse
type ServiceProviderResponse struct {
	ServiceProvider *ServiceProvider `json:"service_provider,omitempty"`
}

// NewServiceProviderResponse instantiates a new ServiceProviderResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceProviderResponse() *ServiceProviderResponse {
	this := ServiceProviderResponse{}
	return &this
}

// NewServiceProviderResponseWithDefaults instantiates a new ServiceProviderResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceProviderResponseWithDefaults() *ServiceProviderResponse {
	this := ServiceProviderResponse{}
	return &this
}

// GetServiceProvider returns the ServiceProvider field value if set, zero value otherwise.
func (o *ServiceProviderResponse) GetServiceProvider() ServiceProvider {
	if o == nil || o.ServiceProvider == nil {
		var ret ServiceProvider
		return ret
	}
	return *o.ServiceProvider
}

// GetServiceProviderOk returns a tuple with the ServiceProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProviderResponse) GetServiceProviderOk() (*ServiceProvider, bool) {
	if o == nil || o.ServiceProvider == nil {
		return nil, false
	}
	return o.ServiceProvider, true
}

// HasServiceProvider returns a boolean if a field has been set.
func (o *ServiceProviderResponse) HasServiceProvider() bool {
	if o != nil && o.ServiceProvider != nil {
		return true
	}

	return false
}

// SetServiceProvider gets a reference to the given ServiceProvider and assigns it to the ServiceProvider field.
func (o *ServiceProviderResponse) SetServiceProvider(v ServiceProvider) {
	o.ServiceProvider = &v
}

func (o ServiceProviderResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ServiceProvider != nil {
		toSerialize["service_provider"] = o.ServiceProvider
	}
	return json.Marshal(toSerialize)
}

type NullableServiceProviderResponse struct {
	value *ServiceProviderResponse
	isSet bool
}

func (v NullableServiceProviderResponse) Get() *ServiceProviderResponse {
	return v.value
}

func (v *NullableServiceProviderResponse) Set(val *ServiceProviderResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceProviderResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceProviderResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceProviderResponse(val *ServiceProviderResponse) *NullableServiceProviderResponse {
	return &NullableServiceProviderResponse{value: val, isSet: true}
}

func (v NullableServiceProviderResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceProviderResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
