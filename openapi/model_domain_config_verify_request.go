/*
Keystone API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DomainConfigVerifyRequest struct for DomainConfigVerifyRequest
type DomainConfigVerifyRequest struct {
	DomainLdapConfig *DomainLDAPConfig `json:"domain_ldap_config,omitempty"`
}

// NewDomainConfigVerifyRequest instantiates a new DomainConfigVerifyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDomainConfigVerifyRequest() *DomainConfigVerifyRequest {
	this := DomainConfigVerifyRequest{}
	return &this
}

// NewDomainConfigVerifyRequestWithDefaults instantiates a new DomainConfigVerifyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDomainConfigVerifyRequestWithDefaults() *DomainConfigVerifyRequest {
	this := DomainConfigVerifyRequest{}
	return &this
}

// GetDomainLdapConfig returns the DomainLdapConfig field value if set, zero value otherwise.
func (o *DomainConfigVerifyRequest) GetDomainLdapConfig() DomainLDAPConfig {
	if o == nil || o.DomainLdapConfig == nil {
		var ret DomainLDAPConfig
		return ret
	}
	return *o.DomainLdapConfig
}

// GetDomainLdapConfigOk returns a tuple with the DomainLdapConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainConfigVerifyRequest) GetDomainLdapConfigOk() (*DomainLDAPConfig, bool) {
	if o == nil || o.DomainLdapConfig == nil {
		return nil, false
	}
	return o.DomainLdapConfig, true
}

// HasDomainLdapConfig returns a boolean if a field has been set.
func (o *DomainConfigVerifyRequest) HasDomainLdapConfig() bool {
	if o != nil && o.DomainLdapConfig != nil {
		return true
	}

	return false
}

// SetDomainLdapConfig gets a reference to the given DomainLDAPConfig and assigns it to the DomainLdapConfig field.
func (o *DomainConfigVerifyRequest) SetDomainLdapConfig(v DomainLDAPConfig) {
	o.DomainLdapConfig = &v
}

func (o DomainConfigVerifyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DomainLdapConfig != nil {
		toSerialize["domain_ldap_config"] = o.DomainLdapConfig
	}
	return json.Marshal(toSerialize)
}

type NullableDomainConfigVerifyRequest struct {
	value *DomainConfigVerifyRequest
	isSet bool
}

func (v NullableDomainConfigVerifyRequest) Get() *DomainConfigVerifyRequest {
	return v.value
}

func (v *NullableDomainConfigVerifyRequest) Set(val *DomainConfigVerifyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDomainConfigVerifyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDomainConfigVerifyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDomainConfigVerifyRequest(val *DomainConfigVerifyRequest) *NullableDomainConfigVerifyRequest {
	return &NullableDomainConfigVerifyRequest{value: val, isSet: true}
}

func (v NullableDomainConfigVerifyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDomainConfigVerifyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
