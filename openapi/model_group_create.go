/*
Keystone API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// GroupCreate struct for GroupCreate
type GroupCreate struct {
	// The description of the group.
	Description *string `json:"description,omitempty"`
	// The ID of the domain of the group. If the domain ID is not provided in the request, the Identity service will attempt to pull the domain ID from the token used in the request. Note that this requires the use of a domain-scoped token.
	DomainId *string `json:"domain_id,omitempty"`
	// The name of the group.
	Name string `json:"name"`
	// The creation time of the group. Stored in `keystone.group.extra`.
	CreatedAt *time.Time `json:"created_at,omitempty"`
}

// NewGroupCreate instantiates a new GroupCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupCreate(name string) *GroupCreate {
	this := GroupCreate{}
	this.Name = name
	return &this
}

// NewGroupCreateWithDefaults instantiates a new GroupCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupCreateWithDefaults() *GroupCreate {
	this := GroupCreate{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GroupCreate) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupCreate) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GroupCreate) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GroupCreate) SetDescription(v string) {
	o.Description = &v
}

// GetDomainId returns the DomainId field value if set, zero value otherwise.
func (o *GroupCreate) GetDomainId() string {
	if o == nil || o.DomainId == nil {
		var ret string
		return ret
	}
	return *o.DomainId
}

// GetDomainIdOk returns a tuple with the DomainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupCreate) GetDomainIdOk() (*string, bool) {
	if o == nil || o.DomainId == nil {
		return nil, false
	}
	return o.DomainId, true
}

// HasDomainId returns a boolean if a field has been set.
func (o *GroupCreate) HasDomainId() bool {
	if o != nil && o.DomainId != nil {
		return true
	}

	return false
}

// SetDomainId gets a reference to the given string and assigns it to the DomainId field.
func (o *GroupCreate) SetDomainId(v string) {
	o.DomainId = &v
}

// GetName returns the Name field value
func (o *GroupCreate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GroupCreate) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GroupCreate) SetName(v string) {
	o.Name = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *GroupCreate) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupCreate) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *GroupCreate) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *GroupCreate) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

func (o GroupCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.DomainId != nil {
		toSerialize["domain_id"] = o.DomainId
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableGroupCreate struct {
	value *GroupCreate
	isSet bool
}

func (v NullableGroupCreate) Get() *GroupCreate {
	return v.value
}

func (v *NullableGroupCreate) Set(val *GroupCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupCreate(val *GroupCreate) *NullableGroupCreate {
	return &NullableGroupCreate{value: val, isSet: true}
}

func (v NullableGroupCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
