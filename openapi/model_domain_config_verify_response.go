/*
Keystone API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DomainConfigVerifyResponse struct for DomainConfigVerifyResponse
type DomainConfigVerifyResponse struct {
	DomainLdapConfig *DomainLDAPConfig `json:"domain_ldap_config,omitempty"`
}

// NewDomainConfigVerifyResponse instantiates a new DomainConfigVerifyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDomainConfigVerifyResponse() *DomainConfigVerifyResponse {
	this := DomainConfigVerifyResponse{}
	return &this
}

// NewDomainConfigVerifyResponseWithDefaults instantiates a new DomainConfigVerifyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDomainConfigVerifyResponseWithDefaults() *DomainConfigVerifyResponse {
	this := DomainConfigVerifyResponse{}
	return &this
}

// GetDomainLdapConfig returns the DomainLdapConfig field value if set, zero value otherwise.
func (o *DomainConfigVerifyResponse) GetDomainLdapConfig() DomainLDAPConfig {
	if o == nil || o.DomainLdapConfig == nil {
		var ret DomainLDAPConfig
		return ret
	}
	return *o.DomainLdapConfig
}

// GetDomainLdapConfigOk returns a tuple with the DomainLdapConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainConfigVerifyResponse) GetDomainLdapConfigOk() (*DomainLDAPConfig, bool) {
	if o == nil || o.DomainLdapConfig == nil {
		return nil, false
	}
	return o.DomainLdapConfig, true
}

// HasDomainLdapConfig returns a boolean if a field has been set.
func (o *DomainConfigVerifyResponse) HasDomainLdapConfig() bool {
	if o != nil && o.DomainLdapConfig != nil {
		return true
	}

	return false
}

// SetDomainLdapConfig gets a reference to the given DomainLDAPConfig and assigns it to the DomainLdapConfig field.
func (o *DomainConfigVerifyResponse) SetDomainLdapConfig(v DomainLDAPConfig) {
	o.DomainLdapConfig = &v
}

func (o DomainConfigVerifyResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DomainLdapConfig != nil {
		toSerialize["domain_ldap_config"] = o.DomainLdapConfig
	}
	return json.Marshal(toSerialize)
}

type NullableDomainConfigVerifyResponse struct {
	value *DomainConfigVerifyResponse
	isSet bool
}

func (v NullableDomainConfigVerifyResponse) Get() *DomainConfigVerifyResponse {
	return v.value
}

func (v *NullableDomainConfigVerifyResponse) Set(val *DomainConfigVerifyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDomainConfigVerifyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDomainConfigVerifyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDomainConfigVerifyResponse(val *DomainConfigVerifyResponse) *NullableDomainConfigVerifyResponse {
	return &NullableDomainConfigVerifyResponse{value: val, isSet: true}
}

func (v NullableDomainConfigVerifyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDomainConfigVerifyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
